# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: [push]

permissions:
  contents: read

jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: education/autograding@v1
    - name: Test
      run: ./gradlew test --tests "*"

    - name: Test Success
      if: success()
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ github.token }}
        script: |
          const pull_number = "${{github.event.number}}"
          await github.pulls.createReview({
            ...context.repo,
            pull_number,
            body: "All tests passed.",
            event: "APPROVE"
          })
    - name: Test Fail
      if: failure()
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ github.token }}
        script: |
          const pull_number = "${{github.event.number}}"
          await github.pulls.createReview({
            ...context.repo,
            pull_number,
            body: "There is something wrong with test codes.",
           event: "REQUEST_CHANGES"
          })
          await github.pulls.update({
            ...context.repo,
            pull_number,
            state: "closed"
          })
    - uses: actions/upload-artifact@v2  # upload test results
      if: success() || failure()        # run this step even if previous step failed
      with:
        name: test-results
        path: jest-junit.xml
